- content_for(:include_custom_stylesheet) do
  = stylesheet_link_tag "styles"
  

      
#contentwrapper

  .contentmain
        
    %div{:class=>"centralized"}
      %div{:class=> "formheading"} 
        Create a new Issue
      %div{:class => "formcontentdiv"}

        -if @issue.errors.any?
          #error_explanation
            %div{:class=>"formerrorhead"}
              = "#{pluralize(@issue.errors.count, "error")} prohibited this issue from being saved:"
            %ul{:class=>"formerrordetails"}
              - @issue.errors.full_messages.each do |msg|
                %li= msg
            
        %div{:class =>"issueblock_edit"}
            
          // Title of the Issue
          %div{:class =>"title_edit"}
            
               
            %div{:style=>"float:left"}  
              %input{:id=>"query", :class=>"searchfield",:style=>"width:250px; margin:0px" ,:placeholder => "Enter an Issue name. . .", :autocomplete=>"off"}
            /%div{:style=>"float:right"}
            /  = submit_tag "Prev", :name => nil, :id=>"preview_button_half"          
            %div{:style=>"float:left; margin:2px 10px 0px 25px;", :id=>"wait"}
            %div{:style=>"float:right"}
              %input{:type=>"button", :id=>"btn_preview", :class=>"preview_button", :value=>"Preview"}          
            %div{:style => "clear:both;"}
          
          %div{:id=>"results", :class=>"result-box"}            
          %div{:style => "clear:both"}
          %div{:class =>"wikicontent_edit"}
            
            
                  
            %div{:id=>"image_preview"}                     
              %img{:src => "/images/issues/image.png", :style=>"background-color:transparent;opacity:0.1" }
                
              %div{:style=>"text-align:center;" }
                Wikipedia image
                  
    
            %div{:id=>"text_preview"}
              %img{:src => "/images/issues/text.png", :style=>"background-color:transparent;opacity:0.1" }
              %div{:style=>"text-align:center;"}
                Wikipedia text 
              
            %div{:style => "clear:both"}
            
          %div{:id=>"form_container", :style=>"display:none; margin-bottom:10px; text-align:center;"}
            = form_for @issue, :id=>"new_issue_form" do |f|
                    
                   
              .field  
                = f.hidden_field :description, :class=>"formfield", :id=>"frm_descr"
                               
              .field  
                = f.hidden_field :wiki_url, :class=>"formfield", :id=>"frm_wiki_url"
                    
              .field
                = f.hidden_field :short_url, :class=>"formfield", :id=>"frm_img_url"
        
              .field
                = f.hidden_field :title, :class=>"formfield", :id=>"frm_title"

              .field
                = f.hidden_field :user_id, :class=>"formfield", :id=>"frm_user", :value=>current_user.id      
              .action
                = f.submit "Save", :class=>"save_button", :name=>"save_button", :id=>"val_collector"
              

#clear{:style => "clear:left;"}
    

%script{:src => "http://maps.google.com/maps/api/js?sensor=false&libraries=panoramio", :type => "text/javascript"}
%script{:src => "http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/themes/base/jquery-ui.css", :type => "text/javascript"}
%script{:src => "http://ajax.googleapis.com/ajax/libs/jquery/1.5/jquery.min.js", :type => "text/javascript"}
%script{:src => "http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js", :type => "text/javascript"}
%script{:type => "text/javascript"}
   
  // Make sure the DOM is loaded
  $(document).ready(function(){
  
  // F U N C T I O N S    C A L L I N G    M E D I A W I K I    A P I

  window.displayBoxIndex = -1;
  var url='http://en.wikipedia.org/w/api.php?action=opensearch&search=';
  var url_google_img = 'http://ajax.googleapis.com/ajax/services/search/images?rsz=large&start=1&v=1.0&q=';
  var query;
  var arr_length = 0;
  var search_results = [];
  var ignore_keys_array = [18,20,17,40,35,13,27,36,45,37,93,91,34,33,39,16,9,38];
  var mouse_is_inside = false;
  var url_img_name = 'http://en.wikipedia.org/w/api.php?action=parse&prop=text&section=0&format=json&page=';
  var jsonData = " ";
  var img_src = '';
  var text_preview = '';
  
  // Variables to store form field values for Submit:
  var form_title = '';
  var form_descr = '';
  var form_url = '';
  var form_image = '';  
  
  //  (1) *** Monitoring the keyUp action on the query textbox ***
  $('#query').bind('keyup', function(e){

  //  Get value of query from the textbox			
  query=$("#query").val();

  if (query =='' || e.keyCode == 27){
  $("#results").empty(); 
  }
	
  //  If the user types in something and it is a valid key	
  if (query != '' && ($.inArray(e.keyCode, ignore_keys_array) == -1) ){
  
  //  Clear the suggestions
  $("#results").empty();  
  
  //  Initialize the suggestion box with a spinner		
  $("#results").append('<img border="0" src="/images/system/spinner.gif" class="result-spinner"  />');
  
  //  Talk to mediawiki API to fetch suggestions 
  $.getJSON(url+encodeURIComponent(query)+'&callback=?',function(data){
  
  search_results = data[1];
	
  //  Limiting the suggestions to a maximum of 5
  if (search_results.length <= 4) {
  arr_length = search_results.length - 1;
  } else {
  arr_length = 4;
  }
  
  //  Clear the suggestions
  $("#results").empty();
  
  //  Loop through first 5 (maximum) suggestions and show 'em
  for(var i = 0; i<=arr_length; i++){
  
  $("#results").append('<div class="suggestion" >'+search_results[i]+'</div>');
  
  }   //       End of for loop
  
  }); //     End of getJSON function
  
  }   //   End of If structure

  }); // End of keyUp function 


  //  G E T    Q U E R Y    F R O M    S E A R C H - B O X

  $('.suggestion').live("click", function(){
  $("#query").val($(this).html()); 
  $("#results").empty();
  });

  //  R E T R I E V E    C O N T E N T    F R O M    W I K I P E D I A

  $("#btn_preview").click(function(){
  if ($("#query").val())
  {parseJSON();}
  
  });

  //  P A R S E    T H E    R E C E I V E D    J S O N    C O N T E N T

  function parseJSON() {
  // initialize spinner
  $("#wait").html('<img border="0" src="/images/system/spinnergray.gif"/>');    	
  // create the json url
  jsonData = $.trim(url_img_name+encodeURIComponent($("#query").val())+'&callback=?');  
  // parse the json
  $.getJSON(jsonData, function (data) {
  $.each(data, function (key, val) {
  // call the getJson function
  getJson(val);    
  });    
  
  // remove spinner
  $("#wait").empty();
  // highlight
  //$("div#text_preview").effect("highlight", {color: '#AADDEE'}, 3000); 
  });}
  
  
  //  R E A D    T H E    P A R S E D    J S O N    F O R    C O N T E N T					
  function getJson(JData) {
   
  $.each(JData, function (Jkey, Jval) {
  if (Jval && typeof Jval == "object") {
  
  getJson(Jval);    
  
  } else {
  
  //  populate the description text
  text_preview = $(Jval).filter('p:first').text();
  
  //  Throw error if no text was received
  if(text_preview == ''){
  
  text_preview = "No data! Please try a different keyword."
  
  // hide the save button
  $('#form_container').css("display", "none");
  // replace HTML of target Div
  $('#text_preview').showHtml('<img src = "/images/issues/text.png" style="background-color:transparent;opacity:0.1" /><div style="text-align:center; color:#CC0000">'+text_preview+'</div>', 400);  
  // show dummy image for image
  $('#image_preview').showHtml('<img src = "/images/issues/image.png" style="background-color:transparent;opacity:0.1" /><div style="text-align:center; color:#CC0000">Not found!</div>', 400);
  
  //  If the search was successful - 
  } else {

  // shorten if beyond limit
  if(text_preview.length > 450){text_preview = text_preview.substring(0, 450) + '...';}

  // replace HTML of target Div
  $('#text_preview').showHtml(text_preview, 400);
  form_descr = $("#text_preview").html();
  // show the form 
  $("#form_container").css("display", "block");

  // find the image from Json
  img_src = $(Jval).find('img.thumbimage').attr('src');  
  
  // if image not found from wikipedia, get it from google
  if (img_src == null){

  // retrieve JSON from google images search and pull the url for first image result
  $.getJSON(url_google_img+encodeURIComponent($("#query").val())+'&callback=?', function(data) {
  $.each(data.responseData.results, function(i,item){
  // replace HTML of target Div
  $('#image_preview').html('<img src="'+item.tbUrl+'" onError="this.src=\'/images/issues/image.png\'" class="wikiimage_edit"/><br />Google image');
  form_image = $('#image_preview').html();
  if ( i == 0 ) return false;
  });  
  });
  
  // if the image was found from WIKIPEDIA itself, then just go ahead and use that.
  } else {
  // replace HTML of target Div 
  $('#image_preview').html('<img src="'+img_src+'" onError="this.src=\'/images/issues/image.png\';" class="wikiimage_edit"/><br />wikipedia image');
  form_image = $("#image_preview img:first").attr("src");
  
  }	  //        END of If structure (checking for Image Success from Wikipedia)	  
  
  }   //      END of If structure (checking for Text Success from Wikipedia)
  
  }   //     END of If structure (checking for type Object)

  }); //   END of Each loop
  
  }   // END of function  

  function valueCollect() {
  $("#frm_img_url").val($('#image_preview').find("img").attr("src"));
  $("#frm_descr").val(form_descr);
  $("#frm_title").val($("#query").val());
  $("#frm_wiki_url").val("http://en.wikipedia.org/wiki/" + ($("#query").val()).split(' ').join('_'));
  $("#new_issue_form").submit();
  }

  $("#val_collector").click(function(){
  valueCollect();
  });


  //   Close suggestions if clicked elsewhere
  $('#results, #query').hover(function(){ 
  mouse_is_inside=true; 
  }, function(){ 
  mouse_is_inside=false; 
  });

  $("body").mouseup(function(){ 
  if(! mouse_is_inside) {
  $("#results").empty();
  $("#wait").empty(); }
  });
  
  // F A D E - I N    T H E    I S S U E    B L O C K

  $('.issueblock').hide().fadeIn('slow');
  
  // S M O O T H    D I V    S I Z E    T R A N S I T I O N S (this is cool!)

  // Animates the dimensional changes resulting from altering element contents
  // Usage examples: 
  //    $("#myElement").showHtml("new HTML contents");
  //    $("div").showHtml("new HTML contents", 400);
  //    $(".className").showHtml("new HTML contents", 400, 
  //                    function() {/* on completion */});
  (function($)
  {
  $.fn.showHtml = function(html, speed, callback)
  {
  return this.each(function()
  {
  // The element to be modified
  var el = $(this);

  // Preserve the original values of width and height - they'll need 
  // to be modified during the animation, but can be restored once
  // the animation has completed.
  var finish = {width: this.style.width, height: this.style.height};

  // The original width and height represented as pixel values.
  // These will only be the same as `finish` if this element had its
  // dimensions specified explicitly and in pixels. Of course, if that 
  // was done then this entire routine is pointless, as the dimensions 
  // won't change when the content is changed.
  var cur = {width: el.width()+'px', height: el.height()+'px'};

  // Modify the element's contents. Element will resize.
  el.html(html);

  // Capture the final dimensions of the element 
  // (with initial style settings still in effect)
  var next = {width: el.width()+'px', height: el.height()+'px'};

  el .css(cur) 
  el .animate(next, speed, function()  // animate to final dimensions
  {
  el.css(finish); // restore initial style settings
  if ( $.isFunction(callback) ) callback();
  });
  });
  };
  })(jQuery);

  // S C R O L L - D I V
  // D I S M I S S    T H E    F L A S H    N O T I C E

  var close = "<a href='#' class='closebutton'><img border='0' src='/images/system/close.png' alt='close button' width='18' height='18' style='float:right' /></a>";
  if ($('.formerrorhead').html().trim()) {
  $('.formerrorhead').append(close);
  }
  
  $(".formerrorhead a").click(function(){
  $("#error_explanation").slideUp(300);
  });


  // M O D A L - D I V     S H O W / H I D E   
  
  //When you click on a link with class of poplight and the href starts with a # 
  $('a.poplight[href^=#]').click(function() {
  var popID = $(this).attr('rel'); //Get Popup Name
  var popURL = $(this).attr('href'); //Get Popup href to define size

  //Pull Query & Variables from href URL
  var query= popURL.split('?');
  var dim= query[1].split('&');
  var popWidth = dim[0].split('=')[1]; //Gets the first query string value

  //Fade in the Popup and add close button
  $('#' + popID).fadeIn().css({ 'width': Number( popWidth ) }).prepend('<a href="#" class="close"><img src="/images/system/close.png" class="btn_close" title="Close Window" alt="Close" /></a>');

  //Define margin for center alignment (vertical   horizontal) - we add 80px to the height/width to accomodate for the padding  and border width defined in the css
  var popMargTop = ($('#' + popID).height() + 80) / 2;
  var popMargLeft = ($('#' + popID).width() + 80) / 2;

  //Apply Margin to Popup
  $('#' + popID).css({
  'margin-top' : -popMargTop,
  'margin-left' : -popMargLeft
  });

  //Fade in Background
  $('body').append('<div id="fade"></div>'); //Add the fade layer to bottom of the body tag.
  $('#fade').css({'filter' : 'alpha(opacity=80)'}).fadeIn(); //Fade in the fade layer - .css({'filter' : 'alpha(opacity=80)'}) is used to fix the IE Bug on fading transparencies 

  return false;
  });

  //Close Popups and Fade Layer When clicking on the close or fade layer...
  $('a.close, #fade').live('click', function() {
  $('#fade , .popup_block').fadeOut(function() {
  $('#fade, a.close').remove();  //fade them both out
  $('#image_preview').html('<img src = "/images/issues/image.png" style="background-color:transparent;opacity:0.1" /><div style="text-align:center">Wikipedia image</div>');
  $('#text_preview').html('<img src = "/images/issues/text.png" style="background-color:transparent;opacity:0.1" /><div style="text-align:center">Wikipedia text </div>');
  $('#form_container').css("display", "none");
  $("#query").val(''); 
  
  
  });
  return false;
  });
  
  
  });

// ** uncomment the following (and comment the subsequest line to get back to the Modal layout 

//#popup_name.popup_block

.add_new_relation_modal
  .add_new_relation_arrow
  .title_edit
    // Search text-field     
    %div{:style=>"float:left"}  
      %input#query.searchfield_wiki{:style=>"" ,:placeholder => "Enter Issue name...", :autocomplete=>"off"}
      
    // Spinner
    %div{:style=>"float:right; margin:2px 2px -10px -27px; position:relative; z-index:1;", :id=>"wait"}

    // Preview Button
    %input{:type=>"button", :id=>"btn_preview", :class=>"discussion_submit", :value=>"Preview",:style=>"margin:0px; margin-left:3px; float:left;"}          
    
    .btn_close{:title => "Close Window"}
    
    .clearboth
  
    %div{:id=>"results", :class=>"result-box"}            
    .clearboth
  %div{:class =>"wikicontent_edit"}
    //#title_modalhead  
    .image_preview_holder
      .img_prev#image_preview1
        .checkcontainer
          .check_empty
          .check_clicked                     
      .img_prev#image_preview2
        .checkcontainer
          .check_empty
          .check_clicked
      .img_prev#image_preview3
        .checkcontainer
          .check_empty
          .check_clicked
      .checkmsg
        Select one
                        
    %div#text_preview
      %div#title_holder
      %div#text_holder  
        
    .clearboth
    
        
    %div{:id=>"form_container"}
      = form_for Issue.new, :remote => true, :id=>"relationship_form" do |f|
        
        .field  
          = f.hidden_field :wiki_url, :class=>"formfield", :id=>"frm_wiki_url"
                
        .field                   
          = f.hidden_field :description, :class=>"formfield", :id=>"frm_descr"
                              
        .field
          = f.hidden_field :short_url, :class=>"formfield", :id=>"frm_img_url"
  
        .field
          = f.hidden_field :title, :class =>"formfield", :id=>"frm_title"

        .field
          - if current_user
            = f.hidden_field :user_id, :class=>"formfield", :id=>"frm_user_id", :value=>current_user.id

                
        .actions
          %div{:style=>"float:left;margin:5px 0px -5px 0px;"}
            %form
              %input{:type=>"hidden", :name=>"action_carrier", :id=>"frm_action"}
              %input{:type=>"hidden", :name=>"id_carrier", :id=>"frm_type_id"}
              /%input#rad_cause{:type => "radio", :name=>"causality_rad", :value=>"Cause"}
              /%span Cause
              /%input#rad_effect{:type => "radio", :name=>"causality_rad", :value=>"Effect"} 
              /%span Effect
          = f.submit 'Create', :class=>"discussion_submit", :name=>"save_issue_rel_button", :id=>"val_collector"
          .clearboth


%script{:src => "http://maps.google.com/maps/api/js?sensor=false&libraries=panoramio", :type => "text/javascript"}
%script{:src => "http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/themes/base/jquery-ui.css", :type => "text/javascript"}
%script{:src => "http://ajax.googleapis.com/ajax/libs/jquery/1.7/jquery.min.js", :type => "text/javascript"}
%script{:src => "http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js", :type => "text/javascript"}
%script{:type => "text/javascript"}
  
  
  var tooltip_preview_text = '';
  var accept_link_text = '';

  var hold_image_link = '';
  var hold_text_descr = '';
  
  var suggestion_parent_div;
  var suggestion_preview;
   
  // Make sure the DOM is loaded
  $(document).ready(function(){

  // HOVER ON CAUSALITY SELECTION
  $(".central_causality_container").mouseenter(function(){
  $(".causality_options_container").css({display : 'block'});
  });
  
  $(".causality_types").mouseleave(function(){
  $(".causality_options_container").css({display : 'none'});
  });  
  
  // C L I C K    E V E N T    F O R    R E F E R E N C E S 
  $(".relationship_boost").click(function(){
  $(".relationship_addref,.ref_error").css({display : 'none'});
  $(".searchfield_smaller").val('http://');
  $(this).siblings(".relationship_addref").css({display : 'block'});
  });
  
  // Closing the references
  $(".close_addref").click(function(){
  $(this).parents(".relationship_addref").css({display : 'none'});
  $(this).siblings(".ref_error").css({display : 'none'});
  $(this).siblings(".searchfield_smaller").val('http://');
  });


  
  // CHECK THE CORRECT RADIO BUTTON DEPENDING ON SELECTION
  /$(".cause_link, .effect_link, .inhibitor_link, .inhibited_link, .super_link, .sub_link").click(function(){
  /var className = $(this).attr('class');
  /var issueTitle = '#{@issue.title.to_s}'
  // CAUSE
  /if (className.indexOf("cause") >= 0){
  /$("#frm_action").val('C');
  /$("#title_modalhead").html('Add a Cause of ' + issueTitle);  
  /}
  // EFFECT
  /else if (className.indexOf("effect") >= 0){    
  /$("#frm_action").val('E');
  /$("#title_modalhead").html('Add an Effect of ' + issueTitle);  
  /}
  // INHIBITOR
  /else if (className.indexOf("inhibitor") >= 0){ 
  /$("#frm_action").val('I');
  /$("#title_modalhead").html('Add something that reduces ' + issueTitle);  
  /}
  // INHIBITED
  /else if (className.indexOf("inhibited") >= 0) {
  /$("#frm_action").val('R');
  /$("#title_modalhead").html('Add something reduced by ' + issueTitle);  
  /}
  // SUPERSET
  /else if (className.indexOf("super") >= 0) {    
  /$("#frm_action").val('P');
  /$("#title_modalhead").html('Add a Superset of ' + issueTitle);  
  /}
  //SUBSET
  /else if (className.indexOf("sub") >= 0){       
  /$("#frm_action").val('S');
  /$("#title_modalhead").html('Add a Subset of ' + issueTitle);  
  /}
  
  /$("#query").val($(this).html().trim());
  /$("#frm_type_id").val(#{@issue.id});
  /});

  $(".poplight").live('click', function(){
  
  var idName = $(this).attr('id');
  var issueTitle = '#{@issue.title.to_s}';

  switch (idName) { 
  case 'add_cause_btn':
  $("#frm_action").val('C');
  $("#query").attr('placeholder', 'Add a Cause of ' + issueTitle)
  break;
  case 'add_effect_btn':
  $("#frm_action").val('E');
  $("#query").attr('placeholder', 'Add an Effect of ' + issueTitle); 
  break;
  case 'add_inhibitor_btn':
  $("#frm_action").val('I');
  $("#query").attr('placeholder', 'Add something that reduces ' + issueTitle); 
  break;
  case 'add_inhibited_btn':
  $("#frm_action").val('R');
  $("#query").attr('placeholder', 'Add something reduced by ' + issueTitle); 
  break;
  case 'add_superset_btn':
  $("#frm_action").val('P');
  $("#query").attr('placeholder', 'Add a Superset of ' + issueTitle);
  break;
  case 'add_subset_btn':
  $("#frm_action").val('S');
  $("#query").attr('placeholder', 'Add a Subset of ' + issueTitle);
  break;
  }
  
  $("#frm_type_id").val(#{@issue.id});
    
  });
  


  // S A V E    R E F E R E N C E S
  $(".save_reference").click(function(){
  
  var elem = $(this).siblings(".searchfield_smaller")
  var myVariable = elem.val();
  
  // if user has not entered http:// https:// or ftp:// assume they mean http://
  if(!/^(https?|ftp):\/\//i.test(myVariable)) {
  myVariable = 'http://'+myVariable; 
  $(elem).val(myVariable); // also update the form element
  }
  
  if(/^([a-z]([a-z]|\d|\+|-|\.)*):(\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?((\[(|(v[\da-f]{1,}\.(([a-z]|\d|-|\.|_|~)|[!\$&'\(\)\*\+,;=]|:)+))\])|((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=])*)(:\d*)?)(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*|(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)|((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)|((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)){0})(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(\#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i.test(myVariable) && myVariable != 'http://') {
  $(this).parents("#new_reference").submit();
  } else {
  $(this).siblings(".ref_error").css({'display' : 'block'});
  return false;
  }
  
  
  });


  // # L I N K S     T O     R E F E R E N C E S
  $(".ref_link").click(function(){
  
  // initialize the background-color back to white
  $("li.ref_li a").animate({'backgroundColor' : '#ffffff'}, 200);
  
  // variable to collect the starting point for highlighting
  var link_href = $(this).attr("href");
  var trimmed_link_href = parseInt(link_href.substring(1,link_href.length));
  
  // variable to collect the number of list items to highlight
  var num_refs = parseInt($(this).attr("rel"));
  
  // highlight the relevant references
  for( i = trimmed_link_href; i <= trimmed_link_href + num_refs - 1 ; i++){
  $("li.ref_li:nth-child(" + i + ") a").animate({'backgroundColor' : '#aaddee'}, 1000);
  }
  
  });

  // T O O L - T I P 
  $(".effect_link, .cause_link, .inhibitor_link, .inhibited_link, .super_link, .sub_link").mouseenter(function(){
  $('.txt-tooltip').empty();
  
  suggestion_parent_div = ($(this).parents('.relationship_thumb_addnew'))
  suggestion_preview    = $(this).children('.icon_holder');
  
  tooltip_preview_text  = $(this).children('.relationship_thumb_title_top').text().trim();
  
  var url_to_parse      = $.trim(url_img_name+encodeURIComponent(tooltip_preview_text)+'&callback=?');
  
  // call the function
  parseJSON_preview(url_to_parse);
       
  });

  $(".effect_link, .cause_link, .inhibitor_link, .inhibited_link, .super_link, .sub_link").mouseleave(function(){
  $('.txt-tooltip').empty();
  $(suggestion_preview).html('<img class="add_relation" src="/images/issues/ques.png" />');
  $('.img-tooltip').css({'display' : 'none'});
  $("#tool_tip").css({'display' : 'none'});
  suggestion_parent_div.children("a.poplight").children(".action_holder").css({'display' : 'none'});
  });

  




  // S C R O L L - D I V
 
  var step = 30;
  var accepted_step = 64; 
  
  // Next and previous functions for Suggestion Scrollers  
  $(".next").click(function(){
  
  var carousalDiv;
  var parentDiv = $(this).parents().eq(1);
  var className = $(parentDiv).attr('class');

  // CAUSE
  if (className.indexOf("cause") >= 0){
  carousalDiv = $('ul.cause_carousel');
  }
  // EFFECT
  else if (className.indexOf("effect") >= 0){    
  carousalDiv = $('ul.effect_carousel'); 
  }
  // INHIBITOR
  else if (className.indexOf("inhibitor") >= 0){ 
  carousalDiv = $('ul.inhibitor_carousel');  
  }
  // INHIBITED
  else if (className.indexOf("inhibited") >= 0) {
  carousalDiv = $('ul.inhibited_carousel'); 
  }
  // SUPERSET
  else if (className.indexOf("super") >= 0) {    
  carousalDiv = $('ul.super_carousel'); 
  }
  //SUBSET
  else if (className.indexOf("sub") >= 0){       
  carousalDiv = $('ul.sub_carousel');
  }
  
  var current_marg_txt = ($(carousalDiv).css('margin-top'))
  var current_marg = parseInt(current_marg_txt.substring(0, current_marg_txt.length - 2))
  
  if (Math.abs(current_marg) < ($(carousalDiv).height())-30){
  
  $(carousalDiv).animate({marginTop:current_marg - step}, 100);
  current_marg = current_marg - step;
  }
  });

  $(".previous").click(function(){

  var carousalDiv;
  var parentDiv = $(this).parents().eq(1);
  var className = $(parentDiv).attr('class');

  // CAUSE
  if (className.indexOf("cause") >= 0){
  carousalDiv = $('ul.cause_carousel');
  }
  // EFFECT
  else if (className.indexOf("effect") >= 0){    
  carousalDiv = $('ul.effect_carousel'); 
  }
  // INHIBITOR
  else if (className.indexOf("inhibitor") >= 0){ 
  carousalDiv = $('ul.inhibitor_carousel');  
  }
  // INHIBITED
  else if (className.indexOf("inhibited") >= 0) {
  carousalDiv = $('ul.inhibited_carousel'); 
  }
  // SUPERSET
  else if (className.indexOf("super") >= 0) {    
  carousalDiv = $('ul.super_carousel'); 
  }
  //SUBSET
  else if (className.indexOf("sub") >= 0){       
  carousalDiv = $('ul.sub_carousel');
  }
  
  var current_marg_txt = ($(carousalDiv).css('margin-top'))
  var current_marg = parseInt(current_marg_txt.substring(0, current_marg_txt.length - 2))
  
  if (current_marg < 0){
  
  $(carousalDiv).animate({marginTop:current_marg + step}, 100);
  current_marg = current_marg + step;
  /alert(current_marg);
  }
  });


  // Next and previous functions for accepted Scrollers
  $(".up_scroll").click(function(){

  var carousalDiv;
  var parentDiv = $(this).parents().eq(1);
  var className = $(parentDiv).attr('class');
  // CAUSE
  if (className.indexOf("cause") >= 0){
  carousalDiv = $('.accepted_causes');
  }
  // EFFECT
  else if (className.indexOf("effect") >= 0){    
  carousalDiv = $('.accepted_effects'); 
  }
  // INHIBITOR
  else if (className.indexOf("inhibitor") >= 0){ 
  carousalDiv = $('.accepted_inhibitors');  
  }
  // INHIBITED
  else if (className.indexOf("inhibited") >= 0) {
  carousalDiv = $('.accepted_inhibited'); 
  }
  // SUPERSET
  else if (className.indexOf("super") >= 0) {    
  carousalDiv = $('.accepted_supersets'); 
  }
  //SUBSET
  else if (className.indexOf("sub") >= 0){       
  carousalDiv = $('.accepted_subsets');
  }
  var current_marg_txt = ($(carousalDiv).css('margin-top'))  
  var current_marg = parseInt(current_marg_txt.substring(0, current_marg_txt.length - 2))  

  if (current_marg < 0){  
  $(carousalDiv).animate({marginTop:current_marg + accepted_step}, 100);
  }

  });

  $(".down_scroll").click(function(){
  var carousalDiv;
  var parentDiv = $(this).parents().eq(1);
  var className = $(parentDiv).attr('class');
  // CAUSE
  if (className.indexOf("cause") >= 0){
  carousalDiv = $('.accepted_causes');
  }
  // EFFECT
  else if (className.indexOf("effect") >= 0){    
  carousalDiv = $('.accepted_effects'); 
  }
  // INHIBITOR
  else if (className.indexOf("inhibitor") >= 0){ 
  carousalDiv = $('.accepted_inhibitors');  
  }
  // INHIBITED
  else if (className.indexOf("inhibited") >= 0) {
  carousalDiv = $('.accepted_inhibited'); 
  }
  // SUPERSET
  else if (className.indexOf("super") >= 0) {    
  carousalDiv = $('.accepted_supersets'); 
  }
  //SUBSET
  else if (className.indexOf("sub") >= 0){       
  carousalDiv = $('.accepted_subsets');
  }
  var current_marg_txt = ($(carousalDiv).css('margin-top'))
  var current_marg = parseInt(current_marg_txt.substring(0, current_marg_txt.length - 2))
  
  if (Math.abs(current_marg) < ($(carousalDiv).height())-64){  
  $(carousalDiv).animate({marginTop:current_marg - accepted_step}, 100);
  }  
  
  });


  // M O D A L - D I V     S H O W / H I D E   
  
  //When you click on a link with class of poplight and the href starts with a # 
  $('a.popup[href^=#]').live('click', function() {

  var popID = $(this).attr('rel'); //Get Popup Name
  var popURL = $(this).attr('href'); //Get Popup href to define size

  //Pull Query & Variables from href URL
  var query= popURL.split('?');
  var dim= query[1].split('&');
  var popWidth = dim[0].split('=')[1]; //Gets the first query string value

  //Fade in the Popup and add close button
  $('#' + popID).fadeIn().css({ 'width': Number( popWidth ) }).prepend('<a href="#" class="close"><div class="btn_close" title="Close Window"></div>');

  //Define margin for center alignment (vertical   horizontal) - we add 80px to the height/width to accomodate for the padding  and border width defined in the css
  var popMargTop = ($('#' + popID).height() + 80) / 2;
  var popMargLeft = ($('#' + popID).width() + 80) / 2;

  //Apply Margin to Popup
  $('#' + popID).css({
  'margin-top' : -popMargTop,
  'margin-left' : -popMargLeft

  });

  //Fade in Background
  $('body').append('<div id="fade"></div>'); //Add the fade layer to bottom of the body tag.
  $('#fade').css({'filter' : 'alpha(opacity=80)'}).fadeIn(); //Fade in the fade layer - .css({'filter' : 'alpha(opacity=80)'}) is used to fix the IE Bug on fading transparencies 

  return false;
  });

  //Close Popups and Fade Layer When clicking on the close or fade layer...
  $('a.close, #fade').live('click', function() {
  $('#fade , .popup_block').fadeOut(function() {
  $('#fade, a.close').remove();  //fade them both out
  $('#image_preview1,#image_preview2,#image_preview3').removeAttr('style');
  $('#text_holder ').html('');
  $('#title_holder').html('');
  $('#text_preview').removeAttr('style');
  // $("#query").attr("disabled", ""); 
  $("#wait").empty();
  $('#form_container').css("display", "none");
  $("#query").val(''); 
  $("#confirm_popup").fadeOut('slow');    
  href_carrier = '';
  });
  return false;
  });

  // O N E    T O U C H    A C C E P T    C A U S E    A N D    E F F E C T     
  //$('a.accept_cause, a.accept_effect, a.accept_inhibitor, a.accept_inhibited, a.accept_super, a.accept_sub').click(function(){

  //var className = $(this).attr('class');
  
  // CAUSE
  //if (className.indexOf("cause") >= 0){
  //$("#frm_action").val('C'); 
  //}
  // EFFECT
  //else if (className.indexOf("effect") >= 0){    
  //$("#frm_action").val('E');  
  //}
  // INHIBITOR
  //else if (className.indexOf("inhibitor") >= 0){ 
  //$("#frm_action").val('I');  
  //}
  // INHIBITED
  /else if (className.indexOf("inhibited") >= 0) {
  /$("#frm_action").val('R'); 
  /}
  // SUPERSET
  /else if (className.indexOf("super") >= 0) {    
  /$("#frm_action").val('P'); 
  /}
  //SUBSET
  /else if (className.indexOf("sub") >= 0){       
  /$("#frm_action").val('S'); 
  /}

  /$("#frm_wiki_url").val("http://en.wikipedia.org/wiki/" + (accept_link_text).split(' ').join('_')); 
  /$("#frm_img_url").val($('#onetouch_image').find("img").attr("src"));
  /$("#frm_descr").val($('#onetouch_text').html());
  /$("#frm_title").val(accept_link_text);
  /$("#frm_type_id").val(#{@issue.id});

  /$("#new_issue").submit();

  /return false;
  /});


  $('.accept_cause, a.accept_effect, a.accept_inhibitor, a.accept_inhibited, a.accept_super, a.accept_sub').mouseover(function(){

  var className = $(this).attr('class');
  
  // CAUSE
  if (className.indexOf("cause") >= 0){
  accept_link_text = $(this).siblings(".cause_link").text().trim(); 
  }
  // EFFECT
  else if (className.indexOf("effect") >= 0){    
  accept_link_text = $(this).siblings(".effect_link").text().trim(); 
  }
  // INHIBITOR
  else if (className.indexOf("inhibitor") >= 0){ 
  accept_link_text = $(this).siblings(".inhibitor_link").text().trim();
  }
  // INHIBITED
  else if (className.indexOf("inhibited") >= 0) {
  accept_link_text = $(this).siblings(".inhibited_link").text().trim();
  }
  // SUPERSET
  else if (className.indexOf("super") >= 0) {    
  accept_link_text = $(this).siblings(".super_link").text().trim();
  }
  //SUBSET
  else if (className.indexOf("sub") >= 0){       
  accept_link_text = $(this).siblings(".sub_link").text().trim();
  }

  // create json request url
  var url_to_accept = $.trim(url_img_name+encodeURIComponent(accept_link_text)+'&callback=?');
  // parse the JSON
  parseJSON_accept(url_to_accept);
  //alert($('.img-tooltip').html());
  });


  function parseJSON_accept(url_to_accept) {
  // parse the json
  
  $.getJSON(url_to_accept, function (data_accept) {
  $.each(data_accept, function (key_accept, val_accept) {
  // call the getJson function
  getJson_accept(val_accept);    
  });    
  });
  
  }  
 
  function getJson_accept(JData_accept) {   

  $.each(JData_accept, function (Jkey_accept, Jval_accept) {
  if (Jval_accept && typeof Jval_accept == "object") {
  getJson_accept(Jval_accept);    
  } else {
  //  Throw error if no text was received
  var text_to_accept = $(Jval_accept).filter('p:first').text();

  if(text_to_accept == ''){
  text_to_accept = "No data!"
  
  //  If the search was successful 
  } else {

  // shorten if beyond limit
  if(text_to_accept.length > 450){text_to_accept = text_to_accept.substring(0, 450) + '...';}

  // replace HTML of target Div
  /$("#frm_descr").val(text_to_accept);
  $('#onetouch_text').html(text_to_accept);

  // find the image from Json
  var img_src_accept = $(Jval_accept).find('img.thumbimage').attr('src');  
  
  // if image not found from wikipedia, get it from google
  if (img_src_accept == null){

  // retrieve JSON from google images search and pull the url for first image result
  
  var url_google_img_accept = 'http://ajax.googleapis.com/ajax/services/search/images?rsz=large&start=0&v=1.0&q=';
  $.getJSON(url_google_img_accept+encodeURIComponent(accept_link_text)+'&callback=?', function(data) {
  $.each(data.responseData.results, function(i,item){
  // replace HTML of target Div
  $('#onetouch_image').html('<img src="'+item.tbUrl+'" onError="this.src=\'/images/issues/image.png\'" width="62px" align="middle" />');
  /$("#frm_img_url").val(item.tbUrl);
  if ( i == 0 ) return false;
  });  
  });
  
  // if the image was found from WIKIPEDIA itself, then just go ahead and use that.
  } else {
  // replace HTML of target Div 
  $('#onetouch_image').html('<img src="'+img_src_accept+'" onError="this.src=\'/images/issues/image.png\';" width="62px" align="middle"/>');
  /$("#frm_img_url").val(img_src_accept);
  
  }	  //        END of If structure (checking for Image Success from Wikipedia)	  
  
  }   //      END of If structure (checking for Text Success from Wikipedia)
  
  }   //     END of If structure (checking for type Object)

  }); //   END of Each loop

  }   // END of function     
  
  
  $(".img-expand").click(function(){
  initialize();  
  $(".wikicontent").hide();
  $(".mapcontainer").show();
  });

  $(".descr-expand").click(function(){ 
  $(".mapcontainer").hide();
  $("#map_canvas").empty();
  map = null;
  $(".wikicontent").show();
  });

  /$(".blob-carrier").mouseover(function(){
  
  /$(".arrow-carrier-left, .arrow-carrier-right").fadeIn(1000, function(){
  /$(".arrow-carrier-left, .arrow-carrier-right").fadeOut()
  /});           
  /});

  /$(".blob-carrier").mouseleave(function(){
  /});


  $(".blob-carrier").click(function(){ 
  $("#wikiInfo").toggle();
  $("#superclass_container").toggle();
  $("#effects_inhibiteds_container").toggle();
  $("#subclass_container").toggle();

  $("#blob_sub").toggle();
  $("#blob_effect_inhibit").toggle();
  $("#blob_super").toggle();
  $("#blob_cause_inhibit").toggle();

  $("#arrow_tail_after").toggle();
  $("#arrow_down_after").toggle();

  // Show hide Scroll buttons if required
  if ($(".accepted_supersets").height() > 64){
  $(".super_scroll").css({display : 'inline'});
  }
  
  if ($(".accepted_subsets").height() > 64){
  $(".sub_scroll").css({display : 'inline'});
  }

  if ($(".super_carousel").height() > 30){
  $(".super_scroller").css({display : 'inline'});
  }
  
  if ($(".sub_carousel").height() > 30){
  $(".sub_scroller").css({display : 'inline'});
  }    

  $(".blue_banner").effect("highlight", {color: '#4DB8DB'}, 1000);
  });
  
  
  });  //  E N D    O F    D O C U M E N T     L O A D
  
  function showPopup(title, msg) {
  $("#confirm_title").html(title);
  $("#confirm_msg").html(msg);
  $("#confirm_buttons").show();
  $('body').append('<div id="fade"></div>'); //Add the fade layer to bottom of the body tag.
  $('#fade').css({'filter' : 'alpha(opacity=80)'}).fadeIn(); //Fade in the fade layer - .css({'filter' : 'alpha(opacity=80)'}) is used to fix the IE Bug on fading transparencies   
  $("#confirm_popup").fadeIn('slow');
  }  
  
  var panoramioLayer;
  var map = null;
  function initialize() {
  var nyHarbor = new google.maps.LatLng(52.696361,-0.703125);
  var myOptions = {
  zoom: 1,
  center: nyHarbor,
  mapTypeId: google.maps.MapTypeId.HYBRID 
  };


  /return new google.maps.Map($('#mapCanvas')[0], myOptions); 
  var map = new google.maps.Map(
  document.getElementById("map_canvas"),
  myOptions);
 
  panoramioLayer = new google.maps.panoramio.PanoramioLayer(); 
  panoramioLayer.setMap(map);
  panoramioLayer.setTag('#{@issue.title}');
  /var elem_height = $('.wikicontent').height()-22;
  /var elem_marg_top = -1 * elem_height
  // Ensure that the height of Map remains same as the rest of the content
  /$('#map_canvas').css({'height': elem_height});

  }

  // T O O L - T I P     P R E V I E W 

  function parseJSON_preview(url_to_parse) {

  //Show the spinner
  $('.txt-tooltip').css({'display' : 'block'});
  $(suggestion_preview).html('<img border="0" src="/images/system/spinner_on43.gif" style="margin-top:25px";/>'); 
  /$("#tool_tip .txt-tooltip").html('<img border="0" src="/images/system/spinner.gif" width="24px"/>');
  
  // parse the json
  $.getJSON(url_to_parse, function (data_prev) {
  $.each(data_prev, function (key_prev, val_prev) {
  // call the getJson function
  getJson_prev(val_prev);    
  });    

  //$('.txt-tooltip').css({'display' : 'block'});
  /$('.img-tooltip').css({'display' : 'block'});

  });}  
  

  function getJson_prev(JData_prev) {
   
  $.each(JData_prev, function (Jkey_prev, Jval_prev) {
  if (Jval_prev && typeof Jval_prev == "object") {
  
  getJson_prev(Jval_prev);    
  
  } else {
  
  
  //  Throw error if no text was received
  
  var text_to_preview = $(Jval_prev).filter('p:first').text();

  if(text_to_preview == ''){
  text_to_preview = "No data!"
  
  //  If the search was successful - 
  } else {

  // shorten if beyond limit
  if(text_to_preview.length > 150){text_to_preview = text_to_preview.substring(0, 150) + '...';}

  // replace HTML of target Div
  $('.txt-tooltip').html(text_to_preview);

  // find the image from Json
  var img_src_prev = $(Jval_prev).find('img.thumbimage').attr('src');  
  
  // if image not found from wikipedia, get it from google
  if (img_src_prev == null){

  // retrieve JSON from google images search and pull the url for first image result
  
  var url_google_img_prev = 'http://ajax.googleapis.com/ajax/services/search/images?rsz=large&start=0&v=1.0&q=';
  $.getJSON(url_google_img_prev+encodeURIComponent(tooltip_preview_text)+'&callback=?', function(data) {
  $.each(data.responseData.results, function(i,item){
  // replace HTML of target Div
  $(suggestion_preview).html('<img src="'+item.tbUrl+'" onError="this.src=\'/images/issues/image.png\'" /> ');
  if ( i == 0 ) return false;
  });  
  preview_suggestion();
  });
  
  // if the image was found from WIKIPEDIA itself, then just go ahead and use that.
  } else {
  // replace HTML of target Div 
  $(suggestion_preview).html('<img src="'+img_src_prev+'" onError="this.src=\'/images/issues/image.png\';" /> ');
  preview_suggestion();
  
  }	  //        END of If structure (checking for Image Success from Wikipedia)	  
  
  }   //      END of If structure (checking for Text Success from Wikipedia)
  
  }   //     END of If structure (checking for type Object)

  }); //   END of Each loop
  
  }   // END of function   
  
